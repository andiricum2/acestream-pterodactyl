name: Docker Hub Release

on:
  release:
    types: [created]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker build
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository }}:${{ github.ref_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository }}:${{ github.run_number }}
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Get the release version from the tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Generate release notes
        uses: actions/github-script@v7
        id: release_notes
        with:
          script: |
            const { owner, repo } = context.repo;
            const version = '${{ steps.get_version.outputs.version }}';
            const tag = 'refs/tags/' + version;
            const commit = github.context.sha;
            const dockerHubImageName = '${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository }}:' + version;

            const body = `
            ## Release Notes

            This release contains the Docker image:

            - Docker Hub: ${dockerHubImageName}

            - Docker Hub Image Tag: \`${dockerHubImageName}\`
            - Commit SHA: \`${commit}\`
            - Git Tag: \`${tag}\`
            `;
            core.setOutput('release_body', body);
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: ${{ steps.release_notes.outputs.release_body }}
          draft: false
          prerelease: false